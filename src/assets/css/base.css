
:root {
    --color-night: hsl(220 33% 11%);
    --color-night-5: hsl(214 54% 13% / 0.05);
    --color-night-10: hsl(214 54% 13% / 0.1);
    --color-night-20: hsl(214 54% 13% / 0.2);
    --color-night-40: hsl(214 54% 13% / 0.4);
    --color-night-80: hsl(214 54% 13% / 0.8);
    --color-night-faded: hsl(210 60% 16%);
    --color-pink: hsl(330 70% 45%);
    --color-blue: hsl(195 100% 40%);
    --color-yellow: hsl(47 99% 55%);
    --color-sand: hsl(36 19% 93%);
    --color-white: hsl(0 0% 100%);
    --color-white-10: hsl(0 0% 100% / 0.1);
    --color-white-20: hsl(0 0% 100% / 0.2);
    --edge-pos: clamp(1rem, -1.3333rem + 11.6667vi, 8rem);
    --edge-neg: clamp(-8rem, 1.3333rem - 11.6667vi, -1rem);
    interpolate-size: allow-keywords;
}

@view-transition {
    navigation: auto;
}

html {
    font-family: 'Noto Sans', system-ui, sans-serif;
    font-optical-sizing: auto;
    background-color: var(--color-night);
    color: var(--color-white);
    box-sizing: border-box;
    -webkit-font-smoothing: antialiased;
    overflow-x: hidden;
}

* {
    box-sizing: inherit;
}

body {
    font-size: clamp(1rem, 0.859rem + 0.58vi, 1.25rem);
    line-height: 1.6;
    margin: 0
}

h1,
h2,
h3,
h4 {
    line-height: 1.33334;
    margin-block: 0 .25em;
}

h1 {
    font-size: clamp(2rem, 1.4rem + 2vw, 3rem);
    font-weight: 900;
}

h2 {
    font-size: 1.5em;
    font-weight: 800;
    letter-spacing: -0.05ch;
    font-stretch: semi-condensed;
}

h3 {
    font-size: 1.125em;
    font-weight: 800;
    font-stretch: semi-condensed;
}

h4 {
    font-size: 1em;
    font-weight: 800;
}
:where(h2,h3,h4) + :is(h2,h3,h4) {
    margin-block-start: 0.5lh;
}

:where(p, ul, ol, dl) {
    margin-block: 0.125lh 0;
}

:where(dl, ul, ol):not([class]) :where(div + div, li + li) {
    margin-block-start: 0.375lh;
}

ul:not([class]) {
    padding-inline-start: 1.15em;
    list-style-type: square
}

ul[class] {
    list-style: none;
    padding-inline-start: 0;
}

:where(p, li) {
    text-wrap: pretty;
}

:where(dd) p {
    margin-block-start: 0;
}

b,
strong {
    font-weight: 600
}

a {
    color: var(--color-night);
    text-decoration-color: var(--color-blue);
    text-underline-offset: 0.1lh;
    text-decoration-thickness: 0.125ch;
}

a:hover {
    text-decoration-color: var(--color-pink);
    text-underline-offset: 0.125lh;
    text-decoration-thickness: 0.15ch;
}

dl {
    margin-block-start: 0.25lh;
}

dt {
    font-weight: 600;
}

dd {
    margin-inline-start: 0;
}

figure {
    margin-inline-start: 0;
    margin-inline-end: 0
}

img {
    max-inline-size: 100%;
    block-size: auto;
    object-fit: cover;
}

button {
    appearance: none;
    background-color: transparent;
    border: 0;
    padding: 0;
    margin: 0;
    font: inherit;
    color: currentColor;
    text-align: initial
}

svg {
    fill: currentColor
}

hr {
    border: 0;
    border-block-start: 1px solid var(--color-night-10);
    margin-block-end: 1em
}

table {
    border-spacing: 0;
    table-layout: fixed;
    inline-size: 100%;
}

table :where(th, td) {
    padding: 0.125lh 1ch;
}

table :where(thead) :where(th, td) {
    font-size: 0.9375em;
}

table :where(tr) :where(th, td):first-child {
    padding-inline-start: 0;
}

table :where(tr) :where(th, td):last-child {
    padding-inline-end: 0;
}

table :where(tbody tr) :where(th, td) {
    border-block-start: 1px solid var(--color-night-20);
}


details {
    display: grid;
    padding-inline-start: 28px;
}
  
summary {
    appearance: none;
    padding-block: 0.25lh;
    font-weight: 700;
    cursor: pointer;
    font-stretch: semi-condensed;
    margin-inline-start: -28px;
    letter-spacing: -0.0125ch;
    display: inline-flex;
    gap: 0.5ch;

    &:hover {
        color: var(--color-blue);
    }
}

summary::marker,
summary::-webkit-details-marker {
    display: none;
    content: "";
}

:where(details[open]) summary {
    margin-block-end: 12px;
}

summary:before {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 24 24' fill='none'%3E%3Cpath stroke='rgb(11 22 34)' stroke-linecap='round' stroke-width='3' d='m6.5 10 5.493 5.493a.01.01 0 0 0 .014 0L17.5 10'/%3E%3C/svg%3E");
    background-position: center;
    background-repeat: no-repeat;
    content: "";
    display: inline-block;
    flex-shrink: 0;
    place-items: center;
    place-self: baseline;
    translate: 0 0.875ch;
    transition: rotate 150ms;
    inline-size: 18px;
    block-size: 18px;
}

:where(details[open]) summary:before {
    rotate: -180deg;
}

[hidden] { display: none }
